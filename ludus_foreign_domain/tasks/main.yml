---
# - name: Ensure the server is rebooted if required
#   win_reboot:
# - name: Configure DNS to include parent dc ip 
#   win_dns_client:
#     adapter_names: "*"
#     ipv4_addresses:
#       - "{{ parent_dc_ip }}"
#       - "{{ current_host_ip }}"

- name: Create domain
  microsoft.ad.domain:
    create_dns_delegation: false
    dns_domain_name: "{{ new_domain_name }}"
    domain_netbios_name: "{{ new_domain_netbios_name }}"
    domain_mode: "{{ DomainMode }}"
    forest_mode: "{{ ForestMode }}" 
    safe_mode_password: "{{ SafeModeAdministratorPassword }}"
    install_dns: true
  register: domain_creation
  failed_when:
    - domain_creation.failed
    - "domain_creation.msg is defined and \"The specified argument 'CreateDNSDelegation' was not recognized\" not in domain_creation.msg"

- name: Ensure the server is rebooted if required
  win_reboot:

# # The old stuff
# - name: Install ADDS 
#   win_feature: 
#     name: AD-Domain-Services
#     include_management_tools: yes
#     include_sub_features: yes
#     state: present 

# - name: Import ADDSDeployment module 
#   win_shell: Import-Module ADDSDeployment 

# - name: Create ADDS and promote child DC with DNS delegation and Safe Mode Admin Password
#   win_shell: |
#     $credential = New-Object System.Management.Automation.PSCredential ('{{ parent_ea_user }}', (ConvertTo-SecureString '{{ parent_ea_password }}' -AsPlainText -Force))

#     Install-ADDSDomain `
#         -Credential $credential `
#         -SafeModeAdministratorPassword (ConvertTo-SecureString -AsPlainText -String "{{ SafeModeAdministratorPassword }}" -Force) `
#         -NewDomainName "{{ new_domain_name }}" `
#         -ParentDomainName "{{ parent_domain_name }}" `
#         -InstallDns:$true `
#         -CreateDnsDelegation:$true `
#         -LogPath "C:\Windows\NTDS" `
#         -SysvolPath "C:\Windows\SYSVOL" `
#         -NoRebootOnCompletion:$false `
#         -DomainMode {{ DomainMode }} `
#         -Force:$true 
#   args:
#     creates: C:\Windows\NTDS
  
